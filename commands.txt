2. Create a local repository.  Add the Github repository as the remote.

pwd
cd Assignments
mkdir Assignment1
cd Assignment1
git config --global user.name "Alicia"
git config --global user.email as14bq@brocku.ca
git init
git remote add origin git@github.com:as14bq/CTA200.git
[new terminal]
cosmo3$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/savelli/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/savelli/.ssh/id_rsa.
Your public key has been saved in /home/savelli/.ssh/id_rsa.pub.
The key fingerprint is:
7b:c6:c7:ce:71:13:19:3e:41:f4:ea:17:70:3c:67:24 savelli@cosmo3
The key's randomart image is:
+--[ RSA 2048]----+
|             .E .|
|             ..+ |
|             .o++|
|             .o*o|
|        S     *. |
|         o . . o.|
|        . + + + .|
|         o + o o |
|            o    |
+-----------------+
cosmo3$ cd ~/.ssh
cosmo3$ ls -la
total 20
drwx------  2 savelli cita 4096 May  5 21:54 .
drwxr-xr-x 30 savelli cita 4096 May  5 16:47 ..
-rw-------  1 savelli cita 1675 May  5 21:54 id_rsa
-rw-r--r--  1 savelli cita  396 May  5 21:54 id_rsa.pub
-rw-r--r--  1 savelli cita 1012 May  5 17:02 known_hosts
cosmo3$ more id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA5Y9JSPjbOMyvxB5DRuPBBkoLvxiu1NSQOhJzMDkCIfhk
P9aqidmLXYeYIuz/dDykRPfpeR9WP0z4AtQ32wJOTJNGRQc4w8co4R72m7M0OrP7Sj9AWems+ElHS/FZ
07gzKJXoQLe5mNhq6aRR8/6FIWbvIjLLO9OsFZCGWwJfGHECUMkIffXPRlC6B2Rj28CFforDiANGB4SI
PUM9W8Vhyfb/hXtMbv0q8VoAW+t4tCs6P3HOsvH9NF7Rn+Jla4vVub7EAywRqG9vFNr1k/FC02iuP7Gx
dvwH6opnss6OlDYo915cXIrFXC59Ecn9w5iMDaUioWMJyzDrHquya26gIQ== savelli@cosmo3
cosmo3$ exit

3. Enter the folder for the local repository in your terminal. Using a text editor such as vi or gedit, create a simple ??README.md?? file and a ??LICENSE?? which contains the MIT license (find this online and
copy/paste it).

gedit

4. Commit your changes to the local repository.

git add README.md LICENSE.txt
git commit -m "license and read me"
git status

5. In your local repository, create a folder called 'assignment_1'

pwd
mkdir assignment_1
cd assignment_1

6. Copy the files ??main.c??, ??average.c?? and ??average.h?? from the ??assignment1 2020?? folder of the CTA200 course repository to your ??assignment 1?? folder local repository.

cd ~/CTA200H/Resources/assignment1_2021/
ls -la
cd assignment_1/
ls -la
cp ~/CTA200H/Resources/assignment1_2021/{main.c,average.c,average.h} assignment_1/

7. Using a text editor, create a ??Makefile?? which builds and links the C program. Check that you can run the program and it produces the right result (you should be able to identify what it does from the code without knowing any C).

cosmo3$ cd CTA200H/Assignments/Assignment1/
cosmo3$ ls -la
total 40
drwxr-xr-x 4 savelli cita 4096 May  5 22:13 .
drwxr-xr-x 3 savelli cita 4096 May  5 10:53 ..
drwxr-xr-x 2 savelli cita 4096 May  5 21:17 assignment_1
drwxr-xr-x 8 savelli cita 4096 May  5 22:11 .git
-rw-r--r-- 1 savelli cita 8848 May  5 22:13 history.txt
-rw-r--r-- 1 savelli cita 1046 May  5 12:54 LICENSE.txt
-rw-r--r-- 1 savelli cita   89 May  5 16:12 Makefile2~
-rw-r--r-- 1 savelli cita    3 May  5 12:51 README.md
cosmo3$ cd assignment_1/
cosmo3$ ls -la
total 36
drwxr-xr-x 2 savelli cita 4096 May  5 21:17 .
drwxr-xr-x 4 savelli cita 4096 May  5 22:13 ..
-rw-r--r-- 1 savelli cita  168 May  5 15:59 average.c
-rw-r--r-- 1 savelli cita   94 May  5 15:59 average.h
-rwxr-xr-x 1 savelli cita 6748 May  5 21:17 filename
-rw-r--r-- 1 savelli cita  219 May  5 15:58 main.c
-rw-r--r-- 1 savelli cita   74 May  5 21:17 Makefile
-rw-r--r-- 1 savelli cita   73 May  5 21:16 Makefile~
cosmo3$ make
make: `filename' is up to date.
cosmo3$ ./filename
The average of 1, 2, 3 and 4 is: 2.5000

8. Commit the Makefile and the .c and .h files.

pwd
cd assignment_1/
git add Makefile main.c avereage.c average.h
git commit -m "Commit C code"
git status

9. Push the changes from your local repository to Github.

git push -u origin main
git push -u origin master
git status

11. Using the history command, save your command line history to a file called ??history.txt?? to show how you completed the tasks (hint: pipe the results of history to the tail command using the | operator to choose how many of the last n lines to show, you can redirect the output to a file using the > operator).

history
gedit

12. Commit your history.txt file to the local repository and push the changes to Github.

cd ..
git add history.txt
git add commands.txt
git commit -m "history"
git status 
git push -u origin master


